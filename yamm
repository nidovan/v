bool isPrivate = true;

string yammerGroupUrl = string.Format("{0}?name={1}&private={2}", 
"https://www.yammer.com/api/v1/groups.json", "group name", isPrivate);

PostRequest(yammerGroupUrl, accessToken);

public string PostRequest(string requestUrl, string token)
{
       string jsonResponse = string.Empty;

       HttpWebRequest request = (HttpWebRequest)WebRequest.Create(requestUrl);
       request.ContentType = "application/json; charset=utf-8";
       request.Accept = "*/*";
       request.Headers.Add("Authorization", "Bearer " + token);
       request.AutomaticDecompression = DecompressionMethods.GZip;
       request.Method = "POST";
       request.ContentLength = 0;

       HttpWebResponse response = request.GetResponse() as HttpWebResponse;
       using (Stream stream = response.GetResponseStream())
       {
          using (StreamReader reader = new StreamReader(stream, Encoding.UTF8))
          {
             jsonResponse = reader.ReadToEnd();
          }
       }

       return jsonResponse;
}


 public static string GetUserTokenByUserId(string UserID, string YammerDeveloperToken, string YammerClientID)
        {
            string EndPointURL = "https://www.yammer.com/api/v1/oauth.json?user_id=" + UserID.ToString() + "&consumer_key=" + YammerClientID;
            try
            {
                string YammerMessageJson = null;
                HttpWebRequest YammerRequest = HttpWebRequest.Create(EndPointURL) as HttpWebRequest;
                YammerRequest.Method = "POST";
                YammerRequest.ContentType = "application/json; odata=verbose";
                YammerRequest.Accept = "application/json; odata=verbose";
                YammerRequest.ContentLength = 0;
                YammerRequest.Headers.Add("Authorization", string.Concat("Bearer ", YammerDeveloperToken));
                using (HttpWebResponse response = YammerRequest.GetResponse() as HttpWebResponse)
                {
                    Encoding encode = Encoding.GetEncoding("utf-8");
                    StreamReader reader = new StreamReader(response.GetResponseStream(), encode);
                    YammerMessageJson = reader.ReadToEnd();
                    //   YammerUserToken UserToken = JsonConvert.DeserializeObject<YammerUserToken>(YammerMessageJson);
                    return YammerMessageJson;
                }
            }
            catch (WebException ex)
            { return null; }
        }
