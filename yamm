https://login.microsoftonline.com/eb03eade-6d68-40a1-8996-bea179ff3137/oauth2/v2.0/authorize?client_id=b94109e1-362d-4a49-97c1-997544737fef&response_type=code&redirect_uri=http%3A%2F%2Flocalhost&response_mode=query&scope=https%3A%2F%2Fapi.yammer.com%2Fuser_impersonation&state=12346



curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' ^
https://login.microsoftonline.com/eb03eade-6d68-40a1-8996-bea179ff3137/oauth2/v2.0/token ^
-d "grant_type=authorization_code" ^
-d "code=" ^
-d "scope=https%3A%2F%2Fapi.yammer.com%2Fuser_impersonation" ^
-d "redirect_uri=http%3A%2F%2Flocalhost" ^
-d "client_id=b94109e1-362d-4a49-97c1-997544737fef" ^
-d "client_secret=" ^
-d "state=12346"







bool isPrivate = true;

string yammerGroupUrl = string.Format("{0}?name={1}&private={2}", 
"https://www.yammer.com/api/v1/groups.json", "group name", isPrivate);

PostRequest(yammerGroupUrl, accessToken);

public string PostRequest(string requestUrl, string token)
{
       string jsonResponse = string.Empty;

       HttpWebRequest request = (HttpWebRequest)WebRequest.Create(requestUrl);
       request.ContentType = "application/json; charset=utf-8";
       request.Accept = "*/*";
       request.Headers.Add("Authorization", "Bearer " + token);
       request.AutomaticDecompression = DecompressionMethods.GZip;
       request.Method = "POST";
       request.ContentLength = 0;

       HttpWebResponse response = request.GetResponse() as HttpWebResponse;
       using (Stream stream = response.GetResponseStream())
       {
          using (StreamReader reader = new StreamReader(stream, Encoding.UTF8))
          {
             jsonResponse = reader.ReadToEnd();
          }
       }

       return jsonResponse;
}


 public static string GetUserTokenByUserId(string UserID, string YammerDeveloperToken, string YammerClientID)
        {
            string EndPointURL = "https://www.yammer.com/api/v1/oauth.json?user_id=" + UserID.ToString() + "&consumer_key=" + YammerClientID;
            try
            {
                string YammerMessageJson = null;
                HttpWebRequest YammerRequest = HttpWebRequest.Create(EndPointURL) as HttpWebRequest;
                YammerRequest.Method = "POST";
                YammerRequest.ContentType = "application/json; odata=verbose";
                YammerRequest.Accept = "application/json; odata=verbose";
                YammerRequest.ContentLength = 0;
                YammerRequest.Headers.Add("Authorization", string.Concat("Bearer ", YammerDeveloperToken));
                using (HttpWebResponse response = YammerRequest.GetResponse() as HttpWebResponse)
                {
                    Encoding encode = Encoding.GetEncoding("utf-8");
                    StreamReader reader = new StreamReader(response.GetResponseStream(), encode);
                    YammerMessageJson = reader.ReadToEnd();
                    //   YammerUserToken UserToken = JsonConvert.DeserializeObject<YammerUserToken>(YammerMessageJson);
                    return YammerMessageJson;
                }
            }
            catch (WebException ex)
            { return null; }
        }
        
        
        
        
        
        
        // Root myDeserializedClass = JsonConvert.DeserializeObject<List<Root>>(myJsonResponse);
    public class Contact
    {
        public Im im { get; set; }
        public List<object> phone_numbers { get; set; }
        public List<EmailAddress> email_addresses { get; set; }
        public bool has_fake_email { get; set; }
    }

    public class EmailAddress
    {
        public string type { get; set; }
        public string address { get; set; }
    }

    public class Im
    {
        public string provider { get; set; }
        public string username { get; set; }
    }

    public class Root
    {
        public string type { get; set; }
        public long id { get; set; }
        public long network_id { get; set; }
        public string state { get; set; }
        public string job_title { get; set; }
        public string location { get; set; }
        public object interests { get; set; }
        public string summary { get; set; }
        public object expertise { get; set; }
        public string full_name { get; set; }
        public string activated_at { get; set; }
        public bool auto_activated { get; set; }
        public bool show_ask_for_photo { get; set; }
        public string first_name { get; set; }
        public string last_name { get; set; }
        public string network_name { get; set; }
        public List<string> network_domains { get; set; }
        public string url { get; set; }
        public string web_url { get; set; }
        public string name { get; set; }
        public string mugshot_url { get; set; }
        public string mugshot_redirect_url { get; set; }
        public string mugshot_url_template { get; set; }
        public string mugshot_redirect_url_template { get; set; }
        public string birth_date { get; set; }
        public string birth_date_complete { get; set; }
        public string timezone { get; set; }
        public List<object> external_urls { get; set; }
        public string admin { get; set; }
        public string verified_admin { get; set; }
        public string m365_yammer_admin { get; set; }
        public string supervisor_admin { get; set; }
        public string o365_tenant_admin { get; set; }
        public string can_broadcast { get; set; }
        public object department { get; set; }
        public string email { get; set; }
        public bool guest { get; set; }
        public bool aad_guest { get; set; }
        public bool can_view_delegations { get; set; }
        public bool can_create_new_network { get; set; }
        public bool can_browse_external_networks { get; set; }
        public string reaction_accent_color { get; set; }
        public string significant_other { get; set; }
        public string kids_names { get; set; }
        public List<object> previous_companies { get; set; }
        public List<object> schools { get; set; }
        public Contact contact { get; set; }
        public Stats stats { get; set; }
        public Settings settings { get; set; }
        public bool show_invite_lightbox { get; set; }
    }

    public class Settings
    {
        public string xdr_proxy { get; set; }
    }

    public class Stats
    {
        public int updates { get; set; }
        public int following { get; set; }
        public int followers { get; set; }
    }






 public class Root
    {
        public long user_id { get; set; }
        public long network_id { get; set; }
        public string network_permalink { get; set; }
        public string network_name { get; set; }
        public bool network_canonical { get; set; }
        public bool network_primary { get; set; }
        public string token { get; set; }
        public string secret { get; set; }
        public bool view_members { get; set; }
        public bool view_groups { get; set; }
        public bool view_messages { get; set; }
        public bool view_subscriptions { get; set; }
        public bool modify_subscriptions { get; set; }
        public bool modify_messages { get; set; }
        public bool view_tags { get; set; }
        public string created_at { get; set; }
        public string authorized_at { get; set; }
        public object expires_at { get; set; }
    }
