
// Set up the proxy settings
var proxy = new WebProxy("http://proxy-server-url:port");
proxy.Credentials = new NetworkCredential("username", "password");
var handler = new HttpClientHandler();
handler.Proxy = proxy;

// Create a new instance of the MSAL client application
var app = PublicClientApplicationBuilder.Create("<client-id>")
                                         .WithAuthority("<authority>")
                                         .WithRedirectUri("<redirect-uri>")
                                         .Build();

// Create an instance of the IntegratedWindowsAuthenticationProvider
var iwaProvider = new IntegratedWindowsAuthenticationProvider(app, scopes);

// Configure the HttpClient to use the HttpClientHandler with the WebProxy
var httpClient = new HttpClient(handler);
iwaProvider.HttpClient = httpClient;

// Use the IntegratedWindowsAuthenticationProvider to acquire a token
var result = await iwaProvider.AcquireTokenAsync("<resource-uri>");
var accessToken = result.AccessToken;









public string GetUserEmailById(string userId)
{
    var userPrincipal = new UserPrincipal(new PrincipalContext(ContextType.Domain));
    userPrincipal.SamAccountName = userId;

    using (var searcher = new PrincipalSearcher(userPrincipal))
    {
        var result = searcher.FindOne() as UserPrincipal;
        if (result != null)
        {
            return result.EmailAddress;
        }
        else
        {
            throw new ArgumentException($"User ID '{userId}' not found in Active Directory.");
        }
    }
}



{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "profiles": {
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      },
      "applicationUrl": "http://localhost:5000",
      "sslPort": 0
    }
  }
}










services.AddCors(options =>
{
    options.AddDefaultPolicy(builder =>
    {
        builder.WithOrigins("http://your-react-app-domain.com")
               .AllowAnyHeader()
               .AllowAnyMethod();
    });
});


<section class="thankyou-page">
		<div class="row">
			<div class="col-md-6 mx-auto">
				<div class="thankyou-page-inner">
					<div class="wrapper">

						<!-- tick  -->
						<div class="tick">
							<div class="done-tick"></div>
							<i class="fa-solid fa-check"></i>
						</div>
						
						<!-- thankyou page heading -->
						<h2>Thankyou For Submission</h2>

						<!-- thankyou page text -->
						<p>
							Don't be afried, Our Telemedical team also give your proper guidline
						</p>

						<!-- thankyou paeg button -->
						<div class="next-btn">
							<button name="next">Back Home</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
